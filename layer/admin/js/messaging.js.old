//peers.js

const axios = require('axios');

window.Vue = require('vue');

import VueI18n from 'vue-i18n';
import en from './lang/en.json';
import fr from './lang/fr.json';

const messages = {
    en,
    fr
}

Vue.component('messaging', require('./components/messaging/messaging.vue').default);

Vue.use(VueI18n)

// Create VueI18n instance with options
const i18n = new VueI18n({
    locale: 'en', // set locale
    messages, // set locale messages
})

const app = new Vue({
    i18n,
    el: '#app',
    data: function() {
        return {
            menuTitle: "",
            menuSubtitle: ""
        };
    }
});

angular.module('messaging', [])
    .factory('PeerMessaging', ['$http', function ($http) {
        console.log("starting Messaging Service")
        return {
            getMailboxes: function () {
                console.log("Getting mailboxes");
                return $http.get('/mailboxes');
            },
            getMessages: function (mailbox) {
                console.log("Getting messages");
                return $http.get('/mailboxes/'+mailbox);
            },
        }
    }])
    .controller('Ctrl', ['PeerMessaging', function (Messaging) {
        var self = this;
        Messaging.getMailboxes().then(
            function (response) {
                self.mailboxes = response.data;
                self.mailbox = 0;
            },
            function (errResponse) {
                self.mailboxes = ["Error"];
            });
        Messaging.getMessages(1).then(
            function (response) {
                self.messages = response.data;
            },
            function (errResponse) {
                self.messages = ["Error"];
            });
    }]);